<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile</title>
    <link rel="stylesheet" href="/styles/styles.css">
    <link rel="stylesheet" href="/styles/home.css">
    <link rel="stylesheet" href="/styles/profile.css">
</head>
<body>
    <header>
        <nav>
            <div class="menu-icon" id="menu-icon">&#9776;</div>
            <div class="menu-backdrop" id="menu-backdrop"></div>
            <ul id="nav-links">
                <li><a href="/">Wellness Feed</a></li>
                <li><a href="/profile">My Wellness Space</a></li>
                <% if (isSelf) { %>
                    <li><a href="/create">Create Reflection</a></li>
                <% } %>
                <li><button id="logout-button">Logout</button></li>
            </ul>
        </nav>
        <h1> <%=isSelf ? 'Welcome! ':''%>  <%=username %></h1>

    </header>

    <main>

        <div id="profile-tabs">
            <button class="profile-tab-button active" data-tab="profile">About</button>
            <button class="profile-tab-button" data-tab="blogs">Reflections</button>
          
            <% if (isSelf) { %>
                <button class="profile-tab-button" data-tab="update-profile">Update Profile</button>
            <% } else { %>
                <!-- Button to Follow or Unfollow the user -->
                <button id="follow-btn" data-user-id="<%=user._id%>" data-followed="false">    <%= isFollowing ? 'Unfollow' : 'Follow' %></button>



                <!-- <button class="follow-button" data-user-id="<%= user._id %>" id="follow-button" onclick="toggleFollow('<%= user._id %>')">Follow</button> -->

                <% } %>
        </div>
        <div id="profile-tabs">
        <button class="profile-tab-button" data-tab="followers">Followers</button>
        <button class="profile-tab-button" data-tab="following">Following</button>
    </div>

        <div class="tab active" id="profile">
            <section>
                <div class="profile-info">
        <img class="select-img1" src="<%=user.profilePicture %>" alt="Profile Picture">

                    <p><strong>Username:</strong> <%= username %></p>
                    <p><strong>Bio:</strong> <%= bio %></p>
                </div>
            </section>
        </div>

        <div class="tab" id="blogs">
            <section>
                <h2>Reflections</h2>
                <ul id="blogList">
                    <% blogs.forEach(blog => { %>
                        <li>
                            <h3><a href="/blogs/<%= blog._id %>"><%= blog.title %></a></h3>
                            
                            <p>Tags:
                                <% if (Array.isArray(blog.tags) && blog.tags.length > 0) { %>
                                    <%= blog.tags.join(', ') %>
                                <% } else { %>
                                    No moods available
                                <% } %>
                            </p>
                            <p><%= blog.content.substring(0, 100) %>...</p>
                            <a href="<%= `/blogs/${blog._id}` %>">Read More</a>
                        </li>
                        
                    <% }); %>
                </ul>
            </section>
        </div>

        <div class="tab" id="followers">
            <section class="followers">
                <h2>Followers</h2>
                <ul id="followers-list">
                    <!-- <% user.followers.forEach(follower => { %>
                        <li>
                            <p><%= follower%></p>
                            <% if (isSelf) { %>
                                <button onclick="unfollowUser('<%= follower._id %>')">Unfollow</button>
                            <% } %>
                        </li>
                    <% }); %> -->
                </ul>
            </section>
        </div>

        <div class="tab" id="following">
            <section class="following">
                <h2>Following</h2>
                <ul id="following-list">
                    <!-- <% user.following.forEach(followed => { %>
                        <li>
                            <p><%= followed.username %></p>
                        </li>
                    <% }); %> -->
                </ul>
            </section>
        </div>

        <% if (isSelf) { %>
            <div class="tab" id="update-profile">
                <section>
                    <form action="/profile/update" method="POST">
                        <label for="email">Email:</label>
                        <input type="email" id="email" name="email" value="<%= user.email %>" required>

                        <label for="bio">Bio:</label>
                        <textarea name="bio" id="bio" placeholder="Tell something about yourself"><%= user.bio %></textarea>

                        <h3>Select Avatar</h3>
                        <div id="avatar-selection">
                            <% for (let i = 1; i <= 4; i++) { %>
                                <img src="/imgs/avatars/avatar<%= i %>.png" alt="Avatar <%= i %>" class="select-img" onclick="selectAvatar('/imgs/avatars/avatar<%= i %>.png')">
                            <% } %>
                        </div>
                        <input type="hidden" id="selected-avatar" name="profilePicture">
                        <button type="submit">Update Profile</button>
                    </form>
                </section>
            </div>
        <% } %>
    </main>



    


        <script>

// avatar selection logic
function selectAvatar(avatarUrl){
document.getElementById('selected-avatar').value=avatarUrl;
const avatarImages=document.querySelectorAll('#avatar-selection img');
avatarImages.forEach(img=> img.classList.remove('selected'));
event.target.classList.add('selected');
}


// tab switching 

const profileTabButtons=document.querySelectorAll('.profile-tab-button');
const tabs=document.querySelectorAll('.tab');

profileTabButtons.forEach(button=>{
    button.addEventListener('click',function(){
        

        profileTabButtons.forEach(btn=> btn.classList.remove('active'));
        tabs.forEach(tab=> tab.classList.remove('active'));

        this.classList.add('active');
        const activeTab=document.getElementById(this.dataset.tab);
        activeTab.classList.add('active');

    });
});

// Follow and unfollow logic
// Follow and unfollow logic
document.addEventListener("DOMContentLoaded", () => {
    const followButton = document.getElementById("follow-btn");

    followButton.addEventListener("click", async () => {
        const userId = followButton.getAttribute("data-user-id");
        const isFollowed = followButton.getAttribute("data-followed") === "true";

        // Define the API endpoint based on the current follow state
        const endpoint = isFollowed 
            ? `/profile/unfollow/${userId}` 
            : `/profile/follow/${userId}`;

        try {
            const response = await fetch(endpoint, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                credentials: "include", // Include cookies for authentication
            });

            // Check if the request was successful
            console.log(response);
            if (response.ok) {
                // Update button text and state based on the new follow status
                followButton.setAttribute("data-followed", !isFollowed);
                followButton.textContent = isFollowed ? "Follow" : "Unfollow";

                await fetchFollowers(userId);
            } else {
                // Handle error if the response is not successful
                const errorData = await response.json();
                console.error("Error:", errorData.error || "Unknown error occurred");
                alert(errorData.error || "An error occurred while processing your request.");
            }
        } catch (error) {
            console.error("Error:", error);
            alert("An error occurred. Please try again later.");
        }
    });
});

         


// Function to handle following a user
function followUser(userId) {
    fetch(`/profile/follow/${userId}`, { method: 'POST' })
        .then(response => response.json())
        .then(data => {
            // console.log(response);

            if (response.success) {
                // const followButton = document.getElementById("follow-button");
                
                // followButton.textContent = "Unfollow"; // Change text to "Unfollow"
                // followButton.onclick = () => unfollowUser(userId); // Update the handler to unfollow
                alert('User followed successfully');
            } else {
                alert('Failed to follow user');
            }
        })
        .catch(error => console.error("Error", error));
}

// Function to handle unfollowing a user
function unfollowUser(userId) {
    fetch(`/profile/unfollow/${userId}`, { method: 'POST' })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // const followButton = document.getElementById("follow-button");
                // followButton.textContent = "Follow"; // Change text to "Follow"
                // followButton.onclick = () => followUser(userId); // Update the handler to follow
                alert('User unfollowed successfully');
            } else {
                alert('Failed to unfollow user');
            }
        })
        .catch(error => console.error("Error", error));
}



// Fetch followers and display usernames
async function fetchFollowers(userId) {
    try {
        const response = await fetch(`/profile/${userId}/followers`);
        const data = await response.json();

        const followersList = document.getElementById('followers-list');
        const followingList = document.getElementById('following-list');

        // Clear previous entries
        followersList.innerHTML = '';
        followingList.innerHTML = '';

        // Populate followers list
        data.followers.forEach(follower => {
            const listItem = document.createElement('li');
            listItem.textContent = follower;
            followersList.appendChild(listItem);

            
        });

        // Populate following list
        data.followings.forEach(following => {
            const listItem = document.createElement('li');
            listItem.textContent = following;
            followingList.appendChild(listItem);
            
            
        });
    } catch (error) {
        console.error('Error fetching followers:', error);
    }
}

// Call the function on page load (replace 'userId' with the actual user ID variable)
fetchFollowers('<%=user._id%>');


// Hamburger menu for mobile 
    const menuIcon=document.getElementById('menu-icon');

    const navLinks=document.getElementById('nav-links');
    const menuBackdrop = document.getElementById('menu-backdrop');
    menuIcon.addEventListener('click',()=>{
    navLinks.classList.toggle('active');
    menuBackdrop.classList.toggle('active');
    })

    menuBackdrop.addEventListener('click',()=>{
    navLinks.classList.remove('active');
    menuBackdrop.classList.remove('active');
    });

// Main Navbar logout functionality
            function handleLogout(){
                fetch('/logout',{method:'POST'})
                  .then(response=>{
                    if(response.ok){
                        // console.log("logged out");
                       
                        // document.cookie = 'token=; Max-Age=0; path=/';
                        window.location.href='/';
                    }else{
                        console.log('Logout failed');
                    }
                  })
                  .catch(error=>{
                    console.log('Error:',error);
                  });
            }

            document.getElementById("logout-button").addEventListener('click',handleLogout);
        </script>
    </main>

    <footer>
        <!-- <p>Made with love from Disha Sethi</p> -->
    </footer>
</body>
</html>